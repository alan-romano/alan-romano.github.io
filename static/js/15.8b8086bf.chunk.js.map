{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Tools/SetDifferenceApp/SetComponent.tsx","components/Tools/SetDifferenceApp/SetDifferenceApp.tsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","SetComponent","props","onValueChange","onCommaSeparatorButtonChange","onDotSeparatorButtonChange","onColumnSeparatorButtonChange","onRowSeparatorButtonChange","bind","setIndex","onSetSeparatorButtonChange","this","setSeparator","setValue","className","style","fontWeight","type","onClick","value","onChange","Component","__setDiffState","separatorChoices","label","sets","separator","id","calculatedOutput","SetDifference","state","onSetSeparatorChange","onSetValueChange","calculateUnion","calculateDifference","swapSets","index","event","newSets","target","setState","getAllSets","map","singleSet","split","Set","finalSet","forEach","val1","add","output","join","str","trim","shift","delete","length","height","Helmet","onSeparatorChange","readOnly"],"mappings":"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","file":"static/js/15.8b8086bf.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/* eslint-disable no-use-before-define */\r\n/* eslint-disable react/no-unused-prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { ChangeEventHandler, Component, MouseEventHandler } from \"react\";\r\n\r\ndeclare interface SetComponentProps {\r\n  setIndex: number;\r\n  setSeparator: string;\r\n  setValue: string;\r\n  onSeparatorChange: (\r\n    index: number,\r\n    event: { target: { value: string } }\r\n  ) => void;\r\n  onValueChange: (index: number, event: { target: { value: string } }) => void;\r\n  onSetSeparatorButtonChange: (index: number, separator: string) => void;\r\n}\r\n\r\nclass SetComponent extends Component {\r\n  onValueChange: ChangeEventHandler<HTMLTextAreaElement>;\r\n\r\n  onCommaSeparatorButtonChange: MouseEventHandler<HTMLButtonElement>;\r\n\r\n  onDotSeparatorButtonChange: MouseEventHandler<HTMLButtonElement>;\r\n\r\n  onColumnSeparatorButtonChange: MouseEventHandler<HTMLButtonElement>;\r\n\r\n  onRowSeparatorButtonChange: MouseEventHandler<HTMLButtonElement>;\r\n\r\n  props!: SetComponentProps;\r\n\r\n  constructor(props: SetComponentProps) {\r\n    super(props);\r\n    // this.onSeparatorChange = this.props.onSeparatorChange.bind(this, props.setIndex);\r\n    this.onValueChange = props.onValueChange.bind(this, props.setIndex);\r\n\r\n    this.onCommaSeparatorButtonChange = props.onSetSeparatorButtonChange.bind(\r\n      this,\r\n      props.setIndex,\r\n      \",\"\r\n    );\r\n    this.onDotSeparatorButtonChange = props.onSetSeparatorButtonChange.bind(\r\n      this,\r\n      props.setIndex,\r\n      \".\"\r\n    );\r\n    this.onColumnSeparatorButtonChange = props.onSetSeparatorButtonChange.bind(\r\n      this,\r\n      props.setIndex,\r\n      \"\\n\"\r\n    );\r\n    this.onRowSeparatorButtonChange = props.onSetSeparatorButtonChange.bind(\r\n      this,\r\n      props.setIndex,\r\n      \"\\t\"\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { setIndex, setSeparator, setValue } = this.props;\r\n    return (\r\n      <div className=\"column\">\r\n        <h3 className=\"subtitle\" style={{ fontWeight: \"bolder\" }}>\r\n          Set {setIndex + 1}\r\n        </h3>\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            <div className=\"buttons has-addons is-right\">\r\n              <button\r\n                type=\"button\"\r\n                className={`button is-dark ${\r\n                  setSeparator === \",\" ? \"is-active\" : \"\"\r\n                }`}\r\n                onClick={this.onCommaSeparatorButtonChange}\r\n              >\r\n                ,\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`button is-dark ${\r\n                  setSeparator === \".\" ? \"is-active\" : \"\"\r\n                }`}\r\n                onClick={this.onDotSeparatorButtonChange}\r\n              >\r\n                .\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`button is-dark ${\r\n                  setSeparator === \"\\n\" ? \"is-active\" : \"\"\r\n                }`}\r\n                onClick={this.onColumnSeparatorButtonChange}\r\n              >\r\n                Column\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`button is-dark ${\r\n                  setSeparator === \"\\t\" ? \"is-active\" : \"\"\r\n                }`}\r\n                onClick={this.onRowSeparatorButtonChange}\r\n              >\r\n                Row\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <textarea\r\n          className=\"textarea\"\r\n          value={setValue}\r\n          onChange={this.onValueChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SetComponent;\r\n","import { Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport SetComponent from \"./SetComponent\";\r\n\r\ndeclare interface SeparatorChoices {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ndeclare interface SetsDetails {\r\n  id: number;\r\n  value: string;\r\n  separator: string;\r\n}\r\n\r\ndeclare interface SetDifferenceState {\r\n  separatorChoices: SeparatorChoices[];\r\n  sets: SetsDetails[];\r\n  calculatedOutput: string;\r\n}\r\n\r\nlet __setDiffState: SetDifferenceState = {\r\n  separatorChoices: [\r\n    { label: \",\", value: \",\" },\r\n    { label: \"Column\", value: \"\\n\" },\r\n    { label: \"Row\", value: \"\\t\" },\r\n  ],\r\n  sets: [\r\n    { value: \"\", separator: \",\", id: 0 },\r\n    { value: \"\", separator: \",\", id: 1 },\r\n  ],\r\n  calculatedOutput: \"\",\r\n};\r\n\r\nclass SetDifference extends Component {\r\n  state: SetDifferenceState;\r\n\r\n  constructor(props: {} | Readonly<{}>) {\r\n    super(props);\r\n\r\n    this.state = __setDiffState;\r\n\r\n    this.onSetSeparatorChange = this.onSetSeparatorChange.bind(this);\r\n    this.onSetSeparatorButtonChange =\r\n      this.onSetSeparatorButtonChange.bind(this);\r\n    this.onSetValueChange = this.onSetValueChange.bind(this);\r\n    this.calculateUnion = this.calculateUnion.bind(this);\r\n    this.calculateDifference = this.calculateDifference.bind(this);\r\n    this.swapSets = this.swapSets.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    __setDiffState = this.state;\r\n  }\r\n\r\n  onSetSeparatorChange(\r\n    index: number,\r\n    event: { target: { value: string } }\r\n  ): void {\r\n    const { sets } = this.state;\r\n    const newSets: SetsDetails[] = [...sets];\r\n    newSets[index].separator = event.target.value;\r\n    this.setState({ sets: newSets });\r\n  }\r\n\r\n  onSetSeparatorButtonChange(index: number, separator: string) {\r\n    const { sets } = this.state;\r\n    const newSets: SetsDetails[] = [...sets];\r\n    newSets[index].separator = separator;\r\n    this.setState({ sets: newSets });\r\n  }\r\n\r\n  onSetValueChange(index: number, event: { target: { value: string } }) {\r\n    const { sets } = this.state;\r\n    const newSets: SetsDetails[] = [...sets];\r\n    newSets[index].value = event.target.value;\r\n    this.setState({ sets: newSets });\r\n  }\r\n\r\n  calculateUnion() {\r\n    const { sets } = this.state;\r\n    const getAllSets = sets\r\n      .map((singleSet) => singleSet.value.split(singleSet.separator))\r\n      .map((singleSet) => {\r\n        return new Set(singleSet);\r\n      });\r\n\r\n    const finalSet = new Set();\r\n\r\n    getAllSets.forEach((singleSet) => {\r\n      singleSet.forEach((val1) => {\r\n        finalSet.add(val1);\r\n      });\r\n    });\r\n\r\n    const output = Array.from(finalSet).join(\"\\n\");\r\n\r\n    this.setState({ calculatedOutput: output });\r\n  }\r\n\r\n  calculateDifference() {\r\n    const { sets } = this.state;\r\n    const getAllSets = sets\r\n      .map((singleSet) =>\r\n        singleSet.value.split(singleSet.separator).map((str) => str.trim())\r\n      )\r\n      .map((singleSet) => {\r\n        return new Set(singleSet);\r\n      });\r\n\r\n    const finalSet = getAllSets.shift();\r\n\r\n    if (finalSet) {\r\n      getAllSets.forEach((singleSet) => {\r\n        singleSet.forEach((val1) => {\r\n          finalSet.delete(val1);\r\n        });\r\n      });\r\n      const output = Array.from(finalSet).join(\"\\n\");\r\n      this.setState({ calculatedOutput: output });\r\n    }\r\n  }\r\n\r\n  swapSets() {\r\n    const { sets } = this.state;\r\n    if (sets.length === 2) {\r\n      const newSets = [sets[1], sets[0]];\r\n      this.setState({\r\n        sets: newSets,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sets, calculatedOutput } = this.state;\r\n\r\n    return (\r\n      <div style={{ height: \"90vh\" }}>\r\n        <Helmet>\r\n          <title>Alan Romano | Set Difference App</title>\r\n        </Helmet>\r\n        <h1 className=\"title\">Set Difference</h1>\r\n        <br />\r\n        <div className=\"columns\">\r\n          {sets.map((singleSet, index) => (\r\n            <SetComponent\r\n              key={`set-comp-${singleSet.id}`}\r\n              setIndex={index}\r\n              setValue={singleSet.value}\r\n              setSeparator={singleSet.separator}\r\n              onSeparatorChange={this.onSetSeparatorChange}\r\n              onValueChange={this.onSetValueChange}\r\n              onSetSeparatorButtonChange={this.onSetSeparatorButtonChange}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            <div className=\"buttons is-grouped is-centered\">\r\n              <button\r\n                className=\"button is-primary\"\r\n                type=\"button\"\r\n                onClick={this.calculateDifference}\r\n              >\r\n                Difference\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"button is-info\"\r\n                onClick={this.calculateUnion}\r\n              >\r\n                Union\r\n              </button>\r\n              &nbsp;\r\n              {sets.length !== 2 ? (\r\n                <span />\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"button is-danger\"\r\n                  onClick={this.swapSets}\r\n                >\r\n                  Swap\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"columns\" />\r\n        <div className=\"column is-three-fifths is-offset-one-fifth\">\r\n          <textarea className=\"textarea\" value={calculatedOutput} readOnly />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SetDifference;\r\n"],"sourceRoot":""}