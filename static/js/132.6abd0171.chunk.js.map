{"version":3,"file":"static/js/132.6abd0171.chunk.js","mappings":"gKASA,IAAIA,EAAkC,CACpCC,aAAc,GACdC,YAAa,IAGA,MAAMC,UAAmBC,EAAAA,UAGtCC,WAAAA,CAAYC,GACVC,MAAMD,GAAO,KAHfE,WAAK,EAIHC,KAAKD,MAAQR,EACbS,KAAKC,cAAgBD,KAAKC,cAAcC,KAAKF,KAC/C,CAEAG,oBAAAA,GACEZ,EAAoBS,KAAKD,KAC3B,CAEAE,aAAAA,CAAcG,GACZ,MAAM,MAAEC,GAAUD,EAAEE,OACdC,EAAeF,EAClBG,QAAQ,QAAS,UACjBA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OAClBR,KAAKS,SAAS,CAAEjB,aAAca,EAAOZ,YAAac,GACpD,CAEAG,MAAAA,GACE,MAAM,aAAElB,EAAY,YAAEC,GAAgBO,KAAKD,MACrCY,GAAenB,EAAaoB,MAAM,QAAU,IAAIC,OAAS,EAC/D,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,0CAETC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,QAAOH,SAAC,uBACtBC,EAAAA,EAAAA,KAAA,UACAF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,SAAQH,SAAA,EACrBD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,UAASH,SAAA,EACtBD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,SAAQH,SAAA,EACrBC,EAAAA,EAAAA,KAAA,YACEE,UAAU,WACVb,MAAOb,EACP2B,SAAUnB,KAAKC,cACfmB,YAAY,0BAEdJ,EAAAA,EAAAA,KAAA,aAEFF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,cAAaH,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBACNC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SACEX,MAAOM,EACPU,UAAQ,EACRH,UAAU,iBACVI,KAAK,gBAIXN,EAAAA,EAAAA,KAAA,OAAKE,UAAU,UAASH,UACtBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQH,UACrBC,EAAAA,EAAAA,KAAA,YAAUE,UAAU,WAAWb,MAAOZ,EAAa4B,UAAQ,aAMvE,E","sources":["components/Tools/NewLineApp/NewLineApp.tsx"],"sourcesContent":["// eslint-disable-next-line no-use-before-define\r\nimport React, { Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ndeclare interface NewLineState {\r\n  textToEscape: string;\r\n  escapedText: string;\r\n}\r\n\r\nlet __newLineAppState: NewLineState = {\r\n  textToEscape: \"\",\r\n  escapedText: \"\",\r\n};\r\n\r\nexport default class NewLineApp extends Component {\r\n  state: NewLineState;\r\n\r\n  constructor(props: {} | Readonly<{}>) {\r\n    super(props);\r\n    this.state = __newLineAppState;\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    __newLineAppState = this.state;\r\n  }\r\n\r\n  onValueChange(e: { target: { value: any } }) {\r\n    const { value } = e.target;\r\n    const escapedValue = value\r\n      .replace(/\\r\\n/g, \"\\\\r\\\\n\")\r\n      .replace(/\\r/g, \"\\\\r\")\r\n      .replace(/\\n/g, \"\\\\n\");\r\n    this.setState({ textToEscape: value, escapedText: escapedValue });\r\n  }\r\n\r\n  render() {\r\n    const { textToEscape, escapedText } = this.state;\r\n    const lineNumbers = (textToEscape.match(/\\n/g) || \"\").length + 1;\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Alan Romano | Newline Escaping App</title>\r\n        </Helmet>\r\n        <h1 className=\"title\">Newline Escaping </h1>\r\n        <br />\r\n        <div className=\"column\">\r\n          <div className=\"columns\">\r\n            <div className=\"column\">\r\n              <textarea\r\n                className=\"textarea\"\r\n                value={textToEscape}\r\n                onChange={this.onValueChange}\r\n                placeholder=\"Enter text to escape\"\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className=\"column is-1\">\r\n              <span>Line Count:</span>\r\n              <br />\r\n              <input\r\n                value={lineNumbers}\r\n                readOnly\r\n                className=\"input is-small\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"columns\">\r\n            <div className=\"column\">\r\n              <textarea className=\"textarea\" value={escapedText} readOnly />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"names":["__newLineAppState","textToEscape","escapedText","NewLineApp","Component","constructor","props","super","state","this","onValueChange","bind","componentWillUnmount","e","value","target","escapedValue","replace","setState","render","lineNumbers","match","length","_jsxs","children","_jsx","Helmet","className","onChange","placeholder","readOnly","type"],"sourceRoot":""}