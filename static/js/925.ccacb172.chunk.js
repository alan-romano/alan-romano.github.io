"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[925],{7925:(e,i,t)=>{t.r(i),t.d(i,{default:()=>l});var n=t(1591),s=t(8001),o=t(9888),r=t(7055),a=t(579);const l=()=>{const{PaperLink:e,GitHubLink:i,ShortName:t,FullTitle:l,YoutubeVideoID:c,DOI:d}=s.Cb;return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.m,{children:(0,a.jsxs)("title",{children:["Alan Romano | ",t]})}),(0,a.jsx)("h1",{className:"title "+o.A.titleFit,children:l}),(0,a.jsxs)("div",{className:"readable-content",children:[(0,a.jsx)(r.A,{doi:d,link:e}),(0,a.jsx)("p",{children:"In this project, we investigate the effects of function inlining optimizations on WebAssembly modules. We find that these optimizations can result in in slower WebAssembly module runtime performance when applied. We inspect the LLVM and Binaryen inlining optimization passes used in the Emscripten C/C++-to-WebAssembly compiler. We inspect 127 C/C++ samples from the LLVM test suite and find that 66 samples exhibit counterintuitive runtime behavior due to function inlining. This behavior is seen when inlining hot functions into long-running functions. We hope our findings motivate further work on revising existing optimizations with the unique characteristics of WebAssembly environments in mind."}),(0,a.jsx)("br",{}),(0,a.jsxs)("p",{children:["The data collected from our study is available as on our project's \xa0",(0,a.jsx)("a",{href:i,children:"Zenodo page"}),"."]}),(0,a.jsx)("br",{}),(0,a.jsx)("br",{})]})]})}},7055:(e,i,t)=>{t.d(i,{A:()=>r});var n=t(6579),s=t(579);const o=e=>{let{link:i,doi:t}=e,o=(0,s.jsx)("span",{});return t&&(o=(0,s.jsxs)("a",{href:"https://doi.org/".concat(t),className:"card-footer-item",style:{wordBreak:"break-word"},children:[(0,s.jsx)(n.g,{icon:"atlas"}),"\xa0DOI: ",t]})),(0,s.jsxs)("footer",{className:"card-footer",style:{borderTop:"none"},children:[o,(0,s.jsxs)("a",{href:i,className:"card-footer-item",children:[(0,s.jsx)(n.g,{icon:"file-pdf"}),"\xa0",i.endsWith(".pdf")?"PDF":"Paper"," Link"]})]})};o.defaultProps={doi:void 0};const r=o},9888:(e,i,t)=>{t.d(i,{A:()=>n});const n={titleFit:"project_pages_titleFit__lLXVq"}}}]);
//# sourceMappingURL=925.ccacb172.chunk.js.map