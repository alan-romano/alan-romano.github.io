{"version":3,"sources":["SetDiffPreview.webp","components/Tools.tsx","components/Projects/ProjectComponent.tsx"],"names":["ToolsComponent","projects","projectName","projectDesc","projectLink","imageSrc","setDiffPreview","altText","Helmet","name","content","className","map","projectDetails","library","add","faFilePdf","ProjectComponent","pdfLink","imageComponent","src","alt","pdfLinkComponent","href","icon","includes","to"],"mappings":"8IAAe,MAA0B,4C,OCsD1BA,UAhDQ,WACrB,IAAMC,EAAW,CACf,CACEC,YAAa,sBACbC,YACE,4KACFC,YAAa,qBAEf,CACEF,YAAa,qBACbC,YACE,sHACFE,SAAUC,EACVF,YAAa,gBACbG,QAAS,8BAEX,CACEL,YAAa,qBACbC,YACE,8FACFC,YAAa,kBAMjB,OACE,gCACE,eAACI,EAAA,EAAD,WACE,wDACA,sBACEC,KAAK,cACLC,QAAQ,iGAGZ,oBAAIC,UAAU,QAAd,mBACA,qBAAKA,UAAU,UAAf,SACGV,EAASW,KAAI,SAACC,GAAD,OACZ,cAAC,IAAD,eAEMA,GAFN,wBACwBA,EAAeX,wB,gCC7CjD,4CAMAY,IAAQC,IAAIC,KAuCGC,IAtCU,SAACJ,GACxB,IAAQX,EACNW,EADMX,YAAaC,EACnBU,EADmBV,YAAaE,EAChCQ,EADgCR,SAAUD,EAC1CS,EAD0CT,YAAaG,EACvDM,EADuDN,QAASW,EAChEL,EADgEK,QAG5DC,EACQ,MAAZd,EAAmB,qBAAKe,IAAKf,EAAUgB,IAAKd,IAAc,yBACtDe,EAAmBJ,EACvB,wBAAQP,UAAU,cAAlB,SACE,oBAAGY,KAAML,EAASP,UAAU,mBAA5B,UACE,cAAC,IAAD,CAAiBa,KAAK,aADxB,OAESN,EAAQO,SAAS,QAAU,WAAa,kBAInD,yBAGF,OACE,qBAAKd,UAAU,SAAf,SACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAASe,GAAItB,EAAb,SACE,qBAAKO,UAAU,aAAf,SACE,wBAAQA,UAAU,SAAlB,SAA4BQ,QAGhC,cAAC,IAAD,CAASO,GAAItB,EAAb,SACE,sBAAKO,UAAU,eAAf,UACE,mBAAGA,UAAU,aAAb,SAA2BT,IAC3B,uBACA,qBAAKS,UAAU,UAAf,SAA0BR,SAG7BmB,MAdL,qBAA2CpB","file":"static/js/9.3e18b780.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/SetDiffPreview.b37b3a8a.webp\";","import { Helmet } from \"react-helmet\";\nimport Project from \"./Projects/ProjectComponent\";\n\nimport setDiffPreview from \"../SetDiffPreview.webp\";\n// import newlinePreview from \"../NewlinePreview.webp\";\n\nconst ToolsComponent = () => {\n  const projects = [\n    {\n      projectName: \"WebAssembly Decoder\",\n      projectDesc:\n        \"This tool can decode WebAssembly modules encoded as base64 strings or as an array of integers, typical inling behavior for including WebAssembly within JavaScript files.\",\n      projectLink: \"/wasmdecoder.html\",\n    },\n    {\n      projectName: \"Set Difference App\",\n      projectDesc:\n        \"This app takes in two pieces of texts containing multiple items and finds the combination or difference among them.\",\n      imageSrc: setDiffPreview,\n      projectLink: \"/setdiff.html\",\n      altText: \"Set Difference App Preview\",\n    },\n    {\n      projectName: \"Newline Escape App\",\n      projectDesc:\n        \"This app takes in piece of text and escapes the newline breaks to return a one-line string.\",\n      projectLink: \"/newline.html\",\n      // imageSrc: newlinePreview,\n      // altText: \"Newline Escape Preview\",\n    },\n  ];\n\n  return (\n    <div>\n      <Helmet>\n        <title>Alan Romano | Tools</title>\n        <meta\n          name=\"Description\"\n          content=\"A list of small, simple utilties that are useful to have when performing data collection.\"\n        />\n      </Helmet>\n      <h1 className=\"title\">Tools</h1>\n      <div className=\"columns\">\n        {projects.map((projectDetails) => (\n          <Project\n            key={`tool-page-for-${projectDetails.projectName}`}\n            {...projectDetails}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ToolsComponent;\n","import { NavLink } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\nimport { ProjectDetails } from \"../../types\";\n\nlibrary.add(faFilePdf);\nconst ProjectComponent = (projectDetails: ProjectDetails) => {\n  const { projectName, projectDesc, imageSrc, projectLink, altText, pdfLink } =\n    projectDetails;\n\n  const imageComponent =\n    imageSrc != null ? <img src={imageSrc} alt={altText} /> : <span />;\n  const pdfLinkComponent = pdfLink ? (\n    <footer className=\"card-footer\">\n      <a href={pdfLink} className=\"card-footer-item\">\n        <FontAwesomeIcon icon=\"file-pdf\" />\n        &nbsp;{pdfLink.includes(\".pdf\") ? \"PDF Link\" : \"Paper Link\"}\n      </a>\n    </footer>\n  ) : (\n    <span />\n  );\n\n  return (\n    <div className=\"column\" key={`column-for-${projectName}`}>\n      <div className=\"card\">\n        <NavLink to={projectLink}>\n          <div className=\"card-image\">\n            <figure className=\"image \">{imageComponent}</figure>\n          </div>\n        </NavLink>\n        <NavLink to={projectLink}>\n          <div className=\"card-content\">\n            <p className=\"title is-4\">{projectName}</p>\n            <br />\n            <div className=\"content\">{projectDesc}</div>\n          </div>\n        </NavLink>\n        {pdfLinkComponent}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectComponent;\n"],"sourceRoot":""}