"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[451],{5451:(e,s,t)=>{t.r(s),t.d(s,{default:()=>l});var a=t(1591),i=t(3083),n=(t(1622),t(8475)),r=t(7055),o=t(579);function l(){const{PaperLink:e,GitHubLink:s,YoutubeVideoID:t,DOI:l}=i.FS;return(0,o.jsxs)("div",{children:[(0,o.jsx)(a.m,{children:(0,o.jsx)("title",{children:"Alan Romano | MinerRay"})}),(0,o.jsx)("h1",{className:"title",children:"MinerRay"}),(0,o.jsx)(n.A,{videoId:t,title:"minerray-demo",altText:"MinerRay Presentation Video"}),(0,o.jsxs)("div",{className:"readable-content",children:[(0,o.jsx)(r.A,{doi:l,link:e}),(0,o.jsx)("p",{children:"MinerRay is a tool designed to detect malicious in-browser cryptominers hidden in webpages. This tool uses a cross-language detection strategy between WebAssembly and JavaScript that allows it to detect miners that exclusively use on language or perform their operations across the language boundary."}),(0,o.jsx)("br",{}),(0,o.jsx)("p",{children:"This tool performs static analysis on WebAssembly and JavaScript by creating langauge abstractons in both languages to model cryptographic hashing operations. Using these abstractons, a control-flow graph is constructed to follow the hashing operations sequentially, and this graph is scanned to detect certain patterns unique to proof-of-work algorithms used in cryptocurrency mining."}),(0,o.jsx)("br",{}),(0,o.jsxs)("p",{children:["The source code for MinerRay is available at its \xa0",(0,o.jsx)("a",{href:s,children:"GitHub repo"}),"."]})]})]})}}}]);
//# sourceMappingURL=451.a98daa19.chunk.js.map