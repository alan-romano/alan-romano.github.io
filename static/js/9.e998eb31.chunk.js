(this["webpackJsonpmy-site"]=this["webpackJsonpmy-site"]||[]).push([[9],{383:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return c}));var a=s(26),i=s(15),n=(s(43),s(34)),r=s(32),o=s(1);function c(){var e=i.d.PaperLink,t=i.d.GitHubLink,s=i.d.YoutubeVideoID,c=i.d.DOI;return Object(o.jsxs)("div",{children:[Object(o.jsx)(a.a,{children:Object(o.jsx)("title",{children:"Alan Romano | MinerRay"})}),Object(o.jsx)("h1",{className:"title",children:"MinerRay"}),Object(o.jsx)(n.a,{videoId:s,title:"minerray-demo",altText:"MinerRay Presentation Video"}),Object(o.jsxs)("div",{className:"readable-content",children:[Object(o.jsx)(r.a,{doi:c,link:e}),Object(o.jsx)("p",{children:"MinerRay is a tool designed to detect malicious in-browser cryptominers hidden in webpages. This tool uses a cross-language detection strategy between WebAssembly and JavaScript that allows it to detect miners that exclusively use on language or perform their operations across the language boundary."}),Object(o.jsx)("br",{}),Object(o.jsx)("p",{children:"This tool performs static analysis on WebAssembly and JavaScript by creating langauge abstractons in both languages to model cryptographic hashing operations. Using these abstractons, a control-flow graph is constructed to follow the hashing operations sequentially, and this graph is scanned to detect certain patterns unique to proof-of-work algorithms used in cryptocurrency mining."}),Object(o.jsx)("br",{}),Object(o.jsxs)("p",{children:["The source code for MinerRay is available at its \xa0",Object(o.jsx)("a",{href:t,children:"GitHub repo"}),"."]})]})]})}}}]);
//# sourceMappingURL=9.e998eb31.chunk.js.map